#Experiment - 23 April 2025
#To implement and evaluate the naive bayes classifier algorithm for the real dataset. (IRIS dataset)
#1. Download the dataset.
#2. Train the dataset using naive bayes classifier.
#3. evaluate the results using confusionÂ matrix.

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix, classification_report, ConfusionMatrixDisplay
import matplotlib.pyplot as plt

# Step 1: Load dataset
iris = load_iris()
X = iris.data
y = iris.target

# Step 2: Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Step 3: Train using Naive Bayes classifier
model = GaussianNB()
model.fit(X_train, y_train)

# Step 4: Make predictions
y_pred = model.predict(X_test)

# Step 5: Evaluate using confusion matrix
cm = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=iris.target_names)
disp.plot(cmap="Blues")
plt.title("Confusion Matrix - Naive Bayes on IRIS Dataset")
plt.show()

# Print classification report
print("Classification Report:\n", classification_report(y_test, y_pred, target_names=iris.target_names))
